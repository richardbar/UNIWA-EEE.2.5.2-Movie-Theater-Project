@using MovieTheaterProject.UI.Utilities.LoginManager
@inherits LayoutComponentBase

@inject ILoginManager loginManager
@inject NavigationManager uriHelper;

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            @if (_loggedIn)
            {
                <button type="button" class="btn btn-danger" @onclick="HandleLogoutButtonClicked">Log out</button>
            }
            else
            {
                <button type="button" class="btn btn-info" @onclick="HandleLoginButtonClicked">Log in</button>
            }
        </div>

        <article class="content px-4">
            <div aria-live="polite" aria-atomic="true" class="position-relative">
                <div class="toast-container position-absolute top-0 end-0 p-3" id="toastContainer">
                    <div class="toast hidden" role="alert" aria-live="assertive" aria-atomic="true" id="toastTemplate">
                        <div class="toast-header">
                            <strong class="me-auto" id="toastTemplateTitle"></strong>
                            <small class="text-muted">Just now</small>
                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                        <div class="toast-body" id="toastTemplateBody"></div>
                    </div>
                </div>
            </div>
            
            @Body
        </article>
    </main>
</div>

@code {
    private bool _loggedIn => loginManager.IsLoggedIn();

    private void HandleLoginButtonClicked()
    {
        loginManager.Login();

        uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
    }

    private async Task HandleLogoutButtonClicked()
    {
        loginManager.Logout();

        uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
    }
}